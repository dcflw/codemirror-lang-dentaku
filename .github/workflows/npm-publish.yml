on:
  push:
    branches:
      - main

name: Build and Publish
jobs:
  publish:
    name: Publish
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v3

      - name: Use pnpm
        uses: pnpm/action-setup@6e1964dde3397a825e79e4607ad57f3f7ca2c7cb
        with:
          version: ^8.10.5

      - name: Set up Node and cache dependencies
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Bump package version
        uses: actions/github-script@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            const packageJson = require('./package.json');
            const npmRegistryUrl = 'https://registry.npmjs.org';

            const currentPackageVersion = await fetch(`${npmRegistryUrl}/${packageJson.name}/latest`).then(async (res) => (await res.json()).version);

            if (currentPackageVersion !== undefined) {
              const commitMessage = context.payload.head_commit.message;
              let [major, minor, patch] = (currentPackageVersion).split('.').map(v => parseInt(v, 10));
              if (commitMessage.includes('BREAKING CHANGE') || commitMessage.includes('!:')) {
                major++;
                minor = 0;
                patch = 0;
              } else if (commitMessage.toLowerCase().startsWith('feat')) {
                minor++;
                patch = 0;
              } else {
                patch++;
              }

              const newPackageVersion = `${major}.${minor}.${patch}`;

              exec.exec(`npm version ${newPackageVersion} --no-git-tag-version --allow-same-version`);
            }
      - name: Build
        run: pnpm build

      - name: Publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
        run: |
          pnpm publish --no-git-checks
          git checkout package.json
